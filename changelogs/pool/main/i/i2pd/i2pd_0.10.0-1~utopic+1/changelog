i2pd (0.10.0-1~utopic+1) utopic; urgency=medium

  * Upload to PPA

 -- Kill Your TV <killyourtv@i2pmail.org>  Mon, 06 Jul 2015 18:54:13 +0000

i2pd (0.10.0-1) unstable; urgency=medium

  [ orignal ]
  * count tunnel acceptance ratio for peer selection
  * moved encryption/decryption to TlsCipher
  * AES256 cipher template
  * use SendFinished
  * RSA_WITH_AES_256_CBC_SHA support
  * https://netdb.rows.io:444/ added
  * fixed typo
  * RC4_SHA cipher suite
  * Update README.md
  * fixed crash if can't connect to a reseed
  * fixed race condition
  * fixed crash if no routers available
  * set datagram receiver per port
  * fixed memory leak
  * select tunnel from TunnelPool rather than from LeaseSet for DeliveryStatus
  * fixed race condition
  * 4 tags for LeaseSet request
  * lookup always takes full address from LeaseSet
  * use shared_ptr for socket in I2PTunnelConnection
  * use shared_ptr for AddressReceiver
  * pass LeaseSet to callback of RequestDestination
  * made Encrypt const
  * use shared_ptr for local LeaseSet
  * use shared_ptr for CreateDatabaseStore
  * use unique_ptr for ElGamalEncryption

  [ Robert Foss ]
  * Fixed memory leak: delete -> delete[]

  [ orignal ]
  * fixed null pointer exception
  * variable length buffer for LeaseSet
  * validate leaseset for zero leases
  * initial code for Ed25519 added
  * multiplication by integer
  * IsOnCurve added
  * Decode point
  * EdDSA signature type added
  * fixed crash
  * EdDSA signer added
  * NetDb/NetDbRequests split
  * implemented AsyncSend
  * use AsyncSend
  * send and handle RESET flag
  * fixed crash
  * show windows size and connection status
  * show local destination for SAM sessions
  * fixed infinite loop
  * GetClosestFloodfills added
  * reduced CPU load at floodfill
  * reduced log file size

  [ 7histle ]
  * Fix for #179

  [ orignal ]
  * delete obsolete profiles
  * check database lookup type
  * check for zero ident
  * don't send reset message due problem at other side
  * always check profile for peer selection
  * check profile for high bandwidth peer selection only
  * version 0.9.19
  * fixed potential memory leak
  * some cleanup
  * re-create tunnel before expiration
  * router don't expire if less than 75
  * double RTO after every resend attempt
  * check outbound tunnles for readiness
  * select next lease with same gateway if possible
  * try to pick an outbound  tunnel with same endpoint instead expired
  * recreate tunnel after 9.5 minutes
  * fixed potential memory leak
  * changed some profiling parameters
  * uin32_t for elapsed time
  * check garlic clove length

  [ Kill Your TV ]
  * reseed certificate updates

  [ orignal ]
  * check profile only once
  * select first hop from existing connections if applicable
  * handle tunnels quantity params
  * Update README.md
  * don't recalculate timestamp for each log message
  * moved UPnP instance to Transports. Use actual port from RouterContext
  * pass TunnelConfig as shared_ptr
  * fixed build errors for gcc 4.6
  * created paired inbound tunnel after outbound
  * rewrite tunnel path inversion code
  * fixed log crash at shutdown

  [ David ]
  * typo: Gralic -> Garlic

  [ orignal ]
  * check for I2NP message buffer boudary
  * use shared_ptr for NetDb's I2NPMessages

  [ ipslot ]
  * Update Log.cpp

  [ orignal ]
  * excluded dead reseeds
  * check length of garlic message
  * http server tunnel added
  * use random msg_id for I2NP messages
  * I2PTunnelConnectionHTTP added
  * use addresses in server tunnel configuration
  * catch HTTP header of HTTP server tunnel connection
  * replace Host: for server http tunnels
  * version 0.9.20
  * fixed bug with zero-size clove
  * additional statistics for profiling
  * skip missing sections
  * don't pick node for 5 minutes if declined
  * select first hop for inbound tunnel from connected peers
  * support multiple transport sessions to the same peer
  * very hash in one pass
  * changed profiling algorithm
  * fixed race condition
  * handle explicitPeers I2CP parameter
  * reduce CPU usage
  * verify adler checksum
  * use share_ptr for garlic messages
  * more generic queue
  * pass I2NP as shared_ptr to netDB
  * pass I2NP message to transport session as shared_ptr
  * send I2NP messages as shared_ptr
  * create shared I2NP tunnel message in OBGW
  * use shared_ptr for direct DatabaseLookup message
  * use shared_ptr for outbound tunnel build messages
  * use shared_ptr for transit tunnel participant
  * use shared_ptr for I2NP messages through tunnels

  [ Mikhail Titov ]
  * Rearrange eol removal for handshake
  * Materialize temporary string obtained from boost path
  * Use static for now while returning HTTP 500 error

  [ orignal ]
  * fixed build error
  * use shared_ptr for all incoming I2NP messages
  * different in and out buffers for tunnel encryption
  * use shared_ptr for garlic messages
  *  shared_ptr for lookup messages
  * deleted deprecated SendMessage
  * use shared_ptr for DeliverStatus

  [ Mikhail Titov ]
  * Check for invalid SAM destination

  [ orignal ]
  * different input anf output I2NP message for tunnel encryption
  * pass const I2NP message to HandleTunnelDataMsg
  * random non-zero padding
  * don't copy transit DatabaseStore
  * handle DeliveryStatus garlic clove directly
  * use shared flood message
  * fixed race condition
  * copy shared_ptr
  * temporary fix of crash
  * some cleanup
  * move FillI2NPMessageHeader into I2NPMessage
  * const I2NP messages
  * don't send DatabaseStore until time sync complete
  * check for buffer size

  [ Kill Your TV ]
  * New Release Version

 -- Kill Your TV <killyourtv@i2pmail.org>  Mon, 06 Jul 2015 16:49:12 +0000

i2pd (0.9.0-1~utopic+1) utopic; urgency=medium

  * Building for Utopic

 -- Kill Your TV <killyourtv@i2pmail.org>  Wed, 01 Apr 2015 17:43:05 +0000

i2pd (0.9.0-1) unstable; urgency=medium

  [ orignal ]
  * show uptime
  * show uptime through I2PControl
  * limit number of transit tunnels
  * show uptime properly
  * 1 hours expiration of RI in case of floodfill
  * use shared_ptr for ClientDestination
  * fixed incorrect instantiation in gcc 4.6
  * global peer tests
  * PeerTest from Alice to Charlie
  * full implementation of peer test
  * firewall detection
  * select peer test capable routers
  * cleanup expired peer tests
  * start unsing introducers after firewall detection
  * connect to introducer if not any yet
  * fixed api build
  * fixed crash
  * fixed crash at startup
  * show tunlel creation success ratio
  * show base64 address
  * don't use explicit unreachable parameter anymore
  * fixed typo
  * handle local destination port
  * shared_ptr for streaming destination
  * choose streaming destination for destination port
  * create additional streaming destination
  * bind streaming destination to port for server tunnel
  * pass source and destination ports to datagram receiver
  * fixed typo
  * send outstanding data on close
  * use v4 only sessions between Bob and Charlie
  * resend message immediately if NACK recieved
  * show router status through I2PControl
  * exclude Token from requests
  * save and check token
  * send close after buffer
  * send proper send time for NACK reply
  * stream status
  * handle stream close depending on state
  * send FIN if closed by peer
  * don't lost received data
  * resend packing with RTO interval
  * reduced memory usage
  * drop RTO to initial if tunnels pair changes
  * reduced memory usage
  * reduce memory usage
  * fixed crash
  * reduce memory usage
  * check I2NP message size for saved fragments
  * don't return error if received data is available
  * fixed memory corruption
  * reduced memory usage
  * reduce memory usage
  * reduce memory usage
  * pass destination port to client tunnel
  * read tunnels.cfg using property tree
  * .ini file format for tunnel.cfg
  * create persistent destinations with ECDSA
  * fill padding with random data
  * read optional destination port form config

  [ Yuriy Grishin ]
  * Added MTU detection code for Windows
  * Whitespace to follow coding style convention

  [ orignal ]
  * access list for server tunnels
  * moved num sent/received bytes to TransportSession
  * show total send/received bytes
  * specify keys file for proxy's local destination
  * calculate bandwidth
  * handle i2p.router.net.bw requests
  * proper badnwidth calculation
  * send exporatory message directly if connected to a floodfill
  * don't accept tunnels if bandwidth is exceeded
  * make sure packet size is multiple of 16 bytes
  * publish number of leasets and routers for floodfill
  * UpdateStats for RouterContext
  * made keys parameter optional for client tunnels
  * badwidth parameter
  * always use 'O' class for high-bandwidth
  * RouterInfo version and status
  * fixed outgoing message size
  * use propery tree for params
  * send I2PControl response without write_json
  * wait for LeaseSet request completion
  * use unique_ptr for socket in I2PTunnelConnection
  * fixed misspelling

  [ hagen ]
  * * README : describe format of tunnels.cfg

  [ orignal ]
  * better resend and tunnel reselection algorithm
  * proper formatting
  * increased transit tunnels # to 2500
  * DeliveryStatus for LeaseSet
  * re-request remote LeaseSet
  * Removed external IP detection step
  * eliminate misalignment for LeaseSet
  * fixed crash
  * add random milliseconds to end date
  * close stream is SYN has not been received
  * select really other remote lease
  * don't wait for remote LeaseSet request complete

  [ multikatt ]
  * adding docker and fig files

  [ orignal ]
  * Profiling added
  * moved Dockerfile to build
  * --host is deprectaed
  * --host is deprecated
  * collect and save participation agreed/declined stats
  * load profiles
  * fixed misalignment
  * create keys only by DEST GENERATE
  * pass data for streams only
  * check lease expiration with threshold
  * create datagram destination for DATAGRAM session

  [ guanqun ]
  * fix tab in README.md

  [ orignal ]
  * const buffer for ProcessPeerTest
  * single buf for ProcessPeerTest
  * store session with Alice with PeerTest
  * handle DATAGRAM SEND
  * proper verification for DSA_SHA1

  [ guanqun ]
  * fix the 'sleep_for' missing error on linux platform

  [ orignal ]
  * increase SAM connection buffer size
  * send ports with datagram
  * process multiple DATAGRAM SEND message
  * merge incomplete DATAGRAM SEND message
  * try to receive remanining message
  * try to receive remanining message
  * restore imcomplete string back
  * fixed typo
  * pass correct datagram size
  * proper size of remaining data
  * initial filtration of bad peers
  * repeat peer test if previous was not successive
  * count non-replied tunnel build requests
  * schedule interoducers again if still testing

  [ guanqun ]
  * setup the correct buffer size

  [ orignal ]
  * fixed typo
  * fixed addressbook crash at shutdown
  * check # of block to encrypt/decrypt for zero
  * delete trailing paddings of SSU packtes
  * save last update time
  * 0.9.0

  [ Kill Your TV ]
  * New upstream relese

 -- Kill Your TV <killyourtv@i2pmail.org>  Tue, 31 Mar 2015 14:14:56 +0000

i2pd (0.8.0-1ubuntu1) utopic; urgency=medium

  * Uploading to PPA

 -- Kill Your TV <killyourtv@i2pmail.org>  Mon, 23 Feb 2015 12:30:37 +0000

i2pd (0.8.0-1) unstable; urgency=medium

  [ Kill Your TV ]
  * New upstream version

  [ orignal ]
  * fixed build for boost below 1.49
  * fixed compilation bug for boost < 1.49 and boost 1.49 with gcc 4.7
  * cleand destination requests every 15 seconds
  * fixed memory leak
  * cleanup from extra log messages
  * check for duplicate msgID
  * use unique_ptr for incomplete message
  * use unique_ptr for requested destination
  * use shared_ptr for inbound tunnels
  * teminate non-connected NTCP session
  * check accepted socket for error
  * drop second incoming connection with same identity
  * check if connection to peer exists already
  * fixed race condition

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Get Jump services working again although, at what price\!
  * URLdecode the base64 part of the key

  [ orignal ]
  * fixed race condition
  * fixed memory leak
  * clean obsolete SSU data

  [ Kill Your TV ]
  * Sync reseed servers with the java router

  [ orignal ]
  * read more data from socket if available
  * use 'available' method
  * separate receivers thread
  * terminate receivers
  * receive multiple UDP packets
  * don't look for session if a packet is from same endpoint as previous
  * delete messages sent to disconnected session
  * fxied race condition
  * allow netDb cleanup after every 500 messages
  * don't insert same transit tunnel twice
  * terminate non-responding NTCP sessions by timeout
  * ban abusing IPs
  * fixed memory leak
  * ban abusing ipv6 addresses
  * use insert instead []
  * complete session if presented
  * cleanup dead peers
  * fixed race condition

  [ multikatt ]
  * typo: stoped->stopped

  [ orignal ]
  * fixed hand at shutdown
  * fixed race condition
  * fixed memory leak
  * config file for I2PTunnels
  * read tunnels.cfg
  * make sure only one I2P tunnel per local prot
  * doesn't create same local destination twice
  * multiple server I2P tunnels
  * read all sections from tunnels.cfg
  * don't throw exception
  * catch sendto exception
  * fixed typo
  * unique_ptr for sent and incomplete messages
  * fixed crash

  [ Kill Your TV ]
  * Remove reseed host, no longer in use

  [ orignal ]
  * SSU data receive batching

  [ Kill Your TV ]
  * New certificate; will be switched on the server for a future release.

  [ orignal ]
  * client hello for HTTPS
  * process server certificate
  * send ClientKeyExchange
  * calculate master secret
  * MAC and encryption keys
  * reduced amount of logging
  * hanshakes hash and finishes message
  * tls 1.2 and RSA_WITH_AES_256_CBC_SHA256
  * send ChangeCipherSpecs
  * tls encrypt and decrypt
  * encrypt finishes message
  * moved https code to TlsSession
  * calculate MAC
  * use 256 bytes block for keys expansion
  * fixed incorrect MAC calculation
  * proper handshake messages hash calculations
  * send and receive data
  * extract https content
  * ClientKeyExchange length depend on key length from ceritifcate
  * include https hosts to reseeder's list
  * show SAM sessions through web interface
  * 128 bytes key expansion
  * original_at_mail.i2p.crt added
  * handle incoming connection failure
  * Update version.h

 -- Kill Your TV <killyourtv@i2pmail.org>  Mon, 23 Feb 2015 01:47:29 +0000

i2pd (0.7.0-1ubuntu1) utopic; urgency=medium

  * Building for Utopic

 -- Kill Your TV <killyourtv@i2pmail.org>  Wed, 04 Feb 2015 12:57:26 +0000

i2pd (0.7.0-1) unstable; urgency=medium

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Introduce missing call to request verification, so unknown address types
    and commands are handled properly, allow for extra socket data after the
    request for fast request sending, it will just be forwarded on I2PConnect
  * Enter state BEFORE reading data to avoid race conditions
  * Reorder SOCKS headers for cleanness
  * Remove unnecessary header
  * Detect null stream on I2PConnect
  * Initial HTTPProxy support by simply transferring control to a tunnel

  [ orignal ]
  * read all available data from closed stream

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Force Connection: Close and allow http/1.1
  * Create I2Pservice as a way to integrate service management, hide unnecessary handlers

  [ orignal ]
  * I2PControl added

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Migrate to I2Pservice
  * Make HTTPProxy use SIGNING_KEY_TYPE_DSA_SHA1
  * Remove ClientContext.h dependency
  * Use shared_from_this to avoid being killed easily on stop

  [ orignal ]
  * JSON parser
  * extract params

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Solve weak_ptr issue
  * Add the TCPIPAcceptor class for handling TCP/IP services on clearnet
  * Make the HTTP Proxy use TCPIPAcceptor
  * Make SOCKS use TCPIPAcceptor
  * Move Stream creation to its own handler for cleanliness, it will hand over
    to a tunnel connection when done
  * Make I2PClientTunnel use TCPIPAcceptor

  [ orignal ]
  * call TCPIPAccetor::Start from I2PClientTunnel::Start
  * added I2PControl to ClientContext
  * I2PControl Authenticate and Echo
  * publish own RouterInfo every 40 minutes if nothing changed
  * changed addressbook subscription update interval to 12 hours
  * check for pending LeaseSet request
  * pass results by reference
  * put dot-separated params
  * put dot-separated params
  * handle i2p.router.netdb.knownpeers RouterInfo request
  * shutdown and graceful shutdown through I2PControl
  * some cleanup
  * less agressive exploratory
  * use TransportSession for sending messages
  * fxied crash at startup
  * moved NTCP to separate thread
  * fixed race condition

  [ root ]
  * added I2PService to VS project
  * fixed boost\asio\detail\socket_types.hpp(24) fatal error C1189:
    "WinSock.h has already been included"

  [ Riccardo Spagni ]
  * license -> BSD 3-clause

  [ orignal ]
  * fixed race condition
  * use lookup tables for requests
  * participating request
  * NetworkSetting method
  * introduced Peer

  [ Timofey Titovets ]
  * Fix: mkdir exist in multi thread building
  * Not overwrite -fPIC with CXXFLAGS

  [ orignal ]
  * send messages through Peer
  * moved delayed queue to Peer
  * handle i2p.router.netdb.activepeers
  * handle i2p.router.netdb.activepeers
  * RequestComplete for RouterInfo
  * use RouterInfo request callback instead timeout
  * fixed crash on shutdown
  * I2PControl method
  * address resolver for NTCP address
  * skip HTTP header
  * make HTTP header if necessary
  * resolve address for NTCP
  * fixed resolve bug
  * use shared local destination for proxies
  * make sure DatabaseStore message is first
  * don't try to re-request expired LeaseSet
  * Reseed through I2PControl
  * correct CRC32 verification at big endian CPU
  * use shared_ptr for TunnelPool
  * removed useless mutex lock
  * proper cleanup of pending tunnels
  * send batch of I2NP messages
  * send multiple messages though single write call
  * some cleanup
  * common HandleTunnelData for own and transit tunnels
  * don't look for tunnel again if tunnelID is the same as for previous
    message
  * fixed 'bad descriptor' exception
  * don't restart subscriptions update timer if no subscription presented
  * TransitTunnelParticipant
  * shared_ptr for GarlicRouting Session
  * remove stream on close
  * I2NPMessagesHandler
  * cleanup routing sessions
  * schedule routing session cleanup
  * Update LICENSE
  * Update copyright
  * process TunnelGateway message in tunnel thread
  * transit tunnel gateway batching
  * naming lookup of .b32 address through LeaseSet request
  * fixed crash
  * fixed typo
  * fixed typo
  * use send buffer for a stream
  * window
  * check for max number of NACKs
  * separate inbound and outbound pending tunnels
  * check message type of follow on message
  * handle tunnel build messages in tunnels thread
  * store LeaseSet as shared_ptr
  * shared_ptr for tunnels
  * fixed corrupted NTCP messages
  * check tunnel status instead fidning it every time
  * clean up expired LeaseSets
  * floodfill parameter
  * specify reply token for RIs DatabaseStore
  * publishing with flood
  * shared_ptr for RoutingDestination
  * slow start and congestion avoidance
  * congesion control during retransmission
  * use I2NPMessagesHandler for SSU
  * send DatabaseStore reply
  * don't send DatabaseStore reply for local destinations
  * detect congesion for first message in sned queue only
  * use unique_ptr for sent fragments
  * show send buffer size
  * fixed typo
  * use stream buffer for sending identity
  * invoke acceptor on reset
  * fixed non-responding destination request
  * flood
  * send 3 closest floodfills

  [ ygrishin ]
  * fixed HTTP connection being reset on Windows

  [ orignal ]
  * don't delete updated RouterInfo
  * moved UPNP to common files
  * DatabaseLookup flags
  * ability to turn floodfill off
  * floodfill parameter
  * pass ident hash by value to transports thread
  * fixed incorect reply data parsing for DatabaseStore
  * make sure DeliveryStatus and DatabseStore are sent first
  * log more disgnostics data
  * handle exploratory lookups
  * RTT
  * don't request same RouterInfo twice
  * show tunnels queue size
  * Update version.h

  [ Kill Your TV ]
  * update debian/copyright
  * Temporarily disable systemd unit

 -- Kill Your TV <killyourtv@i2pmail.org>  Wed, 04 Feb 2015 02:36:15 +0000

i2pd (0.6.0-1) unstable; urgency=medium

  * New upstream release

  [ orignal ]
  * fixed typo
  * terminate acceptor and sessions on stop
  * Cancel added
  * store SAMSession by pointer
  * delete local destination on session close
  * fixed crash at shutdown
  * send request to addressbook link directly without proxy
  * fixed crash
  * process addressbook request response

  [ Kill Your TV ]
  * Revert the 'clean-up' commits so that custom build-time flags can be set
  * add explanatory comments to Makefiles
  * Fix building in kFreeBSD
  * Don't build the lib when making static binaries
  * Add api target
  * slightly stricter use of mkdir/rm -rf

  [ orignal ]
  * look for LeaseSet in shared local destination
  * fixed build error
  * download hosts.txt without proxy

  [ Kill Your TV ]
  * typo fix

  [ orignal ]
  * delete useless field
  * use VerifyDigest for verification

  [ Kill Your TV ]
  * fetch with HTTP/1.1

  [ orignal ]
  * load subscriptions
  * reduce minimal # of routers to 50
  * rolled back to HTTP 1.0 since chunked is not implemented
  * parse HTTP header fields
  * fixed typo
  * merge chunked responses
  * check and update addressbook subscriptions
  * HTTP 1.1 for addressbook

  [ hagen ]
  * new makefile target: deps

  [ orignal ]
  * check status code 304
  * send if-none-match
  * manage non-reponded database requests
  * wait until download complete
  * read incoming data util it's available
  * request and handle LeaseSets through local destination only
  * main netdb can request router info only
  * read reamaining data from closed stream
  * LeaseSet request complete callback
  * wait until LeaseSet request complete instead timeout
  * wait from LeaseSet request comlete
  * take tunnels from exploratory pool only
  * fixed crash
  * report about termination after actual processing

  [ Torkel Bjørnson-Langen ]
  * Fixed building on OS X.
  * Minor: fixed clang compile warning [-Wmismatched-tags]
  * Minor: Makefile - added mk_build_dir to .PHONY target

  [ orignal ]
  * always use destination's thread to avoid race conditions

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Avoid aliasing problems by using special buf endian handling functions
    wrapping memcpy

  [ Kill Your TV ]
  * fix calling individual targets

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Fix any remaning aliasing rules with propper memcpy wrappers
  * Use htobuf16 for 0 value instead of htobe16buf

  [ orignal ]
  * fixed windows build
  * LeaseSet database lookup
  * fixed misalignment
  * invoke accepter after receiving remote identity

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Fix library compilation
  * Use better install paths
  * Allow disabling binary compilation (useful for multilib builds in Gentoo)
  * Fix even more alignment problems

  [ orignal ]
  * copy request to buffer if LeaseSet is requested
  * print out number of NACKs
  * destroy local destination on 'clear'
  * rollback
  * methods for I2NP header access
  * eliminated TunnelGatewayHeader

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Allow for I2PTunnels without LocalDestination
  * Allow for easy stream creation at LocalDestination (for now it's only
    synchronous)

  [ orignal ]
  * more fixes of misalignment

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Use i2p::data::SigningKeyType instead of uint16_t
  * Allow for asynchronous creation of streams

  [ orignal ]
  * process follow-on packets with zero send stream id
  * eliminated cast to DeliveryStatus struct

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Fix a memory leak in ClientConnection
  * Simplify and merge the identHash caching codepath on I2PClientTunnel
  * Use the new asynchronous API on I2PClientTunnel and clean up after
    ourselves

  [ orignal ]
  * eliminated cast to DatabaseStoreMsg
  * request failed in destination is not ready

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Fix strange indentation.
  * Remove unnecessary RemoteLeaseSet
  * Rewrite SOCKS proxy so it uses I2PTunnelConnection and  I2PTunnel
  * Rewrite SOCKS proxy parsing to allow for SOCKS5, also fix any remaining logs

  [ orignal ]
  * eliminated cast to BuildResponse Record

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Handle port correctly

  [ orignal ]
  * fixed race condition

  [ Mikal Villa ]
  * Fix Mac OSX build error.
  * Following BSD standards
  * Libminiupnpc library support (v1.5 and v1.6), dynamic runtime linking.

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Add Initial SOCKS5 support
  * Clean up SOCKS a bit

  [ orignal ]
  * eliminated cast to ecnryptted build record

  [ Mikal Villa ]
  * Updating UPnP code for windows. (untested)

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Use enums instead of magic numbers on SOCKS
  * Merge SOCKS4a and SOCKS5 request parsers, add stub support for SOCKS4 and
    IPv4 and IPv6 addresses on SOCKS5

  [ orignal ]
  * fill clear text buffer of BuildRequestRecord
  * elimimated cast to ClearText
  * DatabaseLookup for RouterInfo

  [ Francisco Blas (klondike) Izquierdo Riera ]
  * Use the address book for conversion into .b32.i2p
  * Return adequate SOCKS replies
  * Reduce memory usage a bit
  * Reduce the parsing to a single state machine, automatic removal of objects
    and destruction of sockets/streams

  [ orignal ]
  * long ElGamal private key
  * Update version.h

 -- Kill Your TV <killyourtv@i2pmail.org>  Tue, 06 Jan 2015 13:10:35 +0000

i2pd (0.5.0-1ubuntu1) utopic; urgency=medium

  * Building for Utopic

 -- Kill Your TV <killyourtv@i2pmail.org>  Thu, 18 Dec 2014 11:41:10 +0000

i2pd (0.5.0-1) unstable; urgency=medium

  [ orignal ]
  * eliminated NTCPServerConnection
  * moved NTCP client code to Transports
  * use shared pointer for NTCPSession
  * drop verifier not used anymore
  * 16 bytes alignmen of AES block
  * adjust message length after alignment
  * remember last outgoing tunnel per stream rather than per client destination
  * filesytem-based addressbook
  * naming lookup through addressbook
  * send packets of a longer message at the that time
  * alignment
  * fixed crash
  * store addresses in csv format
  * load from addressbook first
  * wait for confirmantion of publishing
  * store SAM destinations if address book
  * moved private keys creation to client context
  * encypt tunnel test messages
  * fixed API build error
  * fixed crash
  * send NACKs

  [ Kill Your TV ]
  * Fixed typo in manpage

  [ orignal ]
  * count NACKs in plain ack message size
  * different tunnel length for IB and OB
  * pass I2CP options to local destination. Process tunnel length
  * handle ipv6 sessions in separate thread
  * show local destination's tuunels state
  * don't delete HTTP connection twice
  * fixed memory leak
  * from/to base64
  * wait for all messages acked before termination of a stream
  * delete stream from inside
  * delete non-responding streams
  * BOB added
  * command channel acceptor
  * BOB command parser
  * send BOB message reply
  * BOB outgoing tunnels
  * return public key only for newkeys
  * BOB inbound tunnel
  * inbound tunnels
  * handle stop command
  * temporary disabled tunnel test encryption due instability
  * send recived data after address from BOB inbound connection
  * fixed memory corruption
  * BOB setkeys/getkeys
  * fixed crash on termination
  * handle .i2p address for BOB inbound connections
  * check identity buffer size
  * populate session keys
  * don't close session if unknown command
  * BOB quiet command
  * send base64 adress from outbound non-quiet BOB connections
  * BOB lookup command
  * BOB 'clear' command
  * BOB 'list' command
  * pass BOB options to destination
  * pass BOB options to destination
  * inbound and outbound BOB tunnels per destination
  * AddressReceiver for inbound BOB tunnel

  [ Igor Pavlov ]
  * add SSUSession.cpp to CMakeList.txt
  * change asm labels to temporarily labels to fix clang compilation

  [ orignal ]
  * fixed crash at startup
  * don't publish to non-responding floodfill twice
  * proper response to 'setkeys'
  * Update README.md
  * verify tag count field
  * BOB 'clear' command
  * BOB 'clear' command
  * fixed typo
  * add single tag from destination's tread
  * pass instance of std::ostream for logging from API
  * enale tunnl test encryption back
  * fixed crash
  * fxied build error for VS
  * look for LeaseSet in local database
  * process SU3 header
  * fixed build error
  * some cleanup
  * fixed build error
  * fixed fields length
  * use Inflator instead Gunzip
  * rolled back
  * added RSA verifier
  * RSA signatures
  * copy private signing key of proper size

  [ hagen ]
  * README.md : add -conf option
  * build library in the same tree as main binary
  * fix cmake build

  [ orignal ]
  * reaturned api folder back
  * fixed tabs
  * extend temporary buffer size to 1024
  * pass RSA public key in constructor

  [ Kill Your TV ]
  * minor tweaks to the README

  [ orignal ]
  * pass params to destination
  * reseed from SU3
  * handle compression method field
  * SU3 resseed first
  * check for RI size
  * check for data descriptor flag
  * process SU3 files with data descriptor

  [ Kill Your TV ]
  * sync certificates with the java router

  [ orignal ]
  * initial parsin of X.509 certificate
  * read certificate file

  [ hagen ]
  * cleanup : remove 100% garbage in Makefile.osx
  * (1/3) update filelist.mk : 3 lists of sources: common, daemon-specific and library-specific
  * (2/3) update main Makefile
  * (3/3) 2nd try : drop api/ subdir
  * (1/3) cleanup : use $CXXFLAGS instead $CPU_FLAGS
  * (2/3) cleanup : use $CXXFLAGS instead $NEEDED_FLAGS
  * (3/3) cleanup : unused variable
  * Makefile.osx : exchange options
  * Makefile.linux : reorder checks
  * Makefile.linux : use idents with spaces
  * move USE_* to main Makefile
  * almost fixed static linking
  * Makefile : add dist target
  * update build/CMakeLists.txt

  [ orignal ]
  * extract issuer name

  [ hagen ]
  * reorder makefile rules : fix depends on header

  [ orignal ]
  * don't make executable as shared
  * extract public key from ceritificate
  * load certificates and verify signatures
  * extend LeaseSet buffer to fir RSA-4096 key and signature
  * use RSA-raw for SU3 verification
  * RSA raw verifier
  * load certificates before reseed
  * don't use AESNI if not supported
  * some cleanup
  * pass local destination by pointer
  * create io_service together with destination
  * CRC32 verification
  * fixed compilation warning
  * drop incoming garlic messages if local destination doesn't exist anymore
  * check max version
  * handle signature type for SAM 3.1
  * fixed handshake
  * delete local destination on session close
  * version updated

  [ Kill Your TV ]
  * New upstream release

 -- Kill Your TV <killyourtv@i2pmail.org>  Wed, 17 Dec 2014 15:28:23 +0000

i2pd (0.4.0-1ubuntu1) utopic; urgency=medium

  * Building for Utopic

 -- Kill Your TV <killyourtv@i2pmail.org>  Tue, 25 Nov 2014 19:32:02 +0000

i2pd (0.4.0-1) unstable; urgency=medium

  [ orignal ]
  * store shared pointer to RI in tunnel config
  * use shared pointer for RI in requested destination
  * use shared pointer of RI for transports
  * delete dead floodfill
  * delete delete routers from memory
  * fixed typo
  * shared pointers for SAM sockets
  * fixed crash
  * shared pointers for streams
  * replaced boost::bind to std::bind
  * shared pointer for I2PTunnelConnection
  * move WaitForConnect away from constructor
  * shared pointer for SSU
  * handle EcDSA signatures
  * ECDSA P384 and ECDSA P521 support
  * fixed incorrect certificate length
  * fixed excess data for P521
  * use generic receive buffer for phase 4
  * pass tsA to SendPhase4
  * send Phase3 with proper identity
  * handle Phase3 in two steps
  * Update version.h

  [ Kill Your TV ]
  * New upstream release

 -- Kill Your TV <killyourtv@i2pmail.org>  Tue, 25 Nov 2014 19:00:47 +0000

i2pd (0.3.0-1) unstable; urgency=medium

  [ orignal ]
  * delete single message routing session immediately
  * api added
  * start/stop/init through api
  * specify application name
  * create local destination through API
  * streaming api functions added
  * store RIs as shared pointers
  * AES buffer aligned to 16 bytes
  * receive buffers aligned to 16
  * fixed misalignment
  * encrypted delivery status
  * read RI from buffer
  * support of RI with EcDSA
  * SU3 file parser
  * shared pointer for local RI
  * return shared_ptr to RI

  [ Kill Your TV ]
  * New upstream release

 -- Kill Your TV <killyourtv@i2pmail.org>  Fri, 21 Nov 2014 14:21:08 +0000

i2pd (0.2.1+git20141107.4b0001b-2) unstable; urgency=medium

  * Fix typo in wrapper script

 -- Kill Your TV <killyourtv@i2pmail.org>  Tue, 18 Nov 2014 04:04:05 +0000

i2pd (0.2.1+git20141107.4b0001b-1) unstable; urgency=medium

  * New git uptream snapshot

 -- Kill Your TV <killyourtv@i2pmail.org>  Fri, 07 Nov 2014 15:31:24 +0000

i2pd (0.2.0-2) unstable; urgency=medium

  * Make build slightly more deterministic. The resultant deb files won't
    match, but the binaries within will.
  * Update man page to document the new --v6 option.
  * Add commits from the 0.2.0 tag to commit
    0b77c9651b. The version wasn't bumped until 0b77c9651b.

 -- Kill Your TV <killyourtv@i2pmail.org>  Fri, 31 Oct 2014 20:03:31 +0000

i2pd (0.2.0-1) unstable; urgency=medium

  * New upstream release, 0.2.0

 -- Kill Your TV <killyourtv@i2pmail.org>  Thu, 30 Oct 2014 14:53:47 +0000

i2pd (0.1.0-2) unstable; urgency=medium

  * Include hosts.txt in package.
    - Install hosts.txt in postinstall for the system daemon.
    - Add wrapper script to copy the hosts.txt if it doesn't exist yet.
  * Move i2pd to /usr/bin so that regular users can run it more easily.

 -- Kill Your TV <killyourtv@i2pmail.org>  Thu, 23 Oct 2014 22:04:47 +0000

i2pd (0.1.0-1) unstable; urgency=medium

  * Initial release

 -- Kill Your TV <killyourtv@i2pmail.org>  Fri, 17 Oct 2014 18:10:59 +0000
